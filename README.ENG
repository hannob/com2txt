			com2txt V1.02 document

				NIDE Naoyuki(nide@nara-wu.ac.jp)  93.06.20

1. What's com2txt?

  Com2txt is a tool on MS-DOS which converts a com file to a text file.
It's DOS generic. Unlike tools such as uuencode, the text file generated
by com2txt works as a com file, exactly like the original com file does.
Using com2txt, you can create a com file which can be sent through
networks such as internet, and runs without any decoding.
  Moreover, the text file got by com2txt consists only of ECHOable
characters; it doesn't contain characters such as `<' or `|'. So, using
ECHO command, you can easily generate the textized com file and use it
in a batch file. For detail see section 4.
  Com2txt is a free software, without any warranty. You can freely use,
copy or redistribute it, but to redistribute a modified com2txt is only
permitted if the name of the person who modified it and the place of
modification are written clearly in the document. (Exception: getopt.c
is in public domain; you can use it without any restriction.)
  Please send bug reports, etc. to the e-mail address above. Correction
of English is also welcomed, because my English is so bad.:-)

  Note: There is another free software which works just like com2txt;
Alexander Pruss's comt. The most essential difference between these two
is that the output of com2txt can be generated by ECHO in a batch file,
as mentioned above, but output of comt can't. Thus comt can't be used in
a way like described in section 4. Moreover, the output of com2txt is a
little smaller than that of comt.


2. Contents

  This package contains:

	readme.eng	This file
	readme.doc	Japanese document
	com2txt.c encode.c getopt.c hdr_data.c common.h
			Sources
	makefile.msc	Makefile for MS-C & ASCII Corp. software tools make.exe
	makefile.tcc	Makefile for Turbo C
	makefile.lcc	Makefile for LSI C-86
	com2txt.exe	Executable
	sample/mybatkey.a86
			Used in Japanese document for explanation


3. Usage

  Ths usage of com2txt is

    com2txt [-w length] [-r] filenam1.com filenam2.com

here `length' is the line length of the output, `filenam1.com' is the
name of file to be converted and `filenam2.com' is the name of the
output file. The string `.com' at the end of both filenames can be
omitted. Do not specify same file as `filenam1.com' and `filenam2.com'.
  If you omit `-w' option, the output line length is 54 by default.
Since the data between top of file and the position where the string
`__' first appears is fixed, line length of this area can't be changed
even if you specify `-w' option.
  Option `-r' means reverse conversion. A com file textized by the old
version(1.00) of com2txt can also be deconverted by this version of
com2txt, but the old version of com2txt can't deconvert a com file
converted by this version of com2txt. When this option is specified,
`-w' option is meaningless and ignored.


4. Enbedding to batch file

  As mentioned above, the output of com2txt can be generated by ECHO. A
merit of this feature is that you can generate a com file in a batch
file and use it.
  For example, suppose that you are planning to make a DOS generic batch
file which requires Y/N key input of user. Some versions of MS-DOS have
batkey' command to get key input, but you can't use it since old
versions of MS- DOS don't have it.
  The solution is: first let's make a com file which gets key input.
(You'd better make it yourself, to avoid problems related to copyright
law.) You can get an example of such commands, named yn.com, by
uudecoding the following. It waits until either Y(y) or N(n) key is
input, and returns ERRORLEVEL 0 if the input is Y(y) and 1 otherwise.

begin 644 yn.com
2M`'-(;1,+%ET!BP@=`*P`<TA
`
end

  Next, type `com2txt yn.com yntext.com' and you'll get a textized com
file, named yntext.com, which works exactly same as yn.com does. It's
content is like:

T_OOWW3=XXWX5 2PY5w3P_-l.P-KD1Ep-OLPZ-pJP-pw40PQX5fsPu
com2txt/Nide5Fe,xPQX-=.PQX-MQP-xx4_P5rjP5Z2P-jE,JP=
5O2,APQX5R8P-rJPPRX5iBP-x=PRX5TsP59DHHP5rIHP-w64ZP=
40-2APQX-MiP-trP5_WP-pBP51w,pPTYPZPZP__m4GMH3QLKEetAbp
.14Jp42ta:

  Finally embed it into a batch file with an editor. The following is
an example of result.

echo off
: creat yntext.com
echo T_OOWW3=XXWX5 2PY5w3P_-l.P-KD1Ep-OLPZ-pJP-pw40PQX5fsPu>yntext.com
echo com2txt/Nide5Fe,xPQX-=.PQX-MQP-xx4_P5rjP5Z2P-jE,JP=>>yntext.com
echo 5O2,APQX5R8P-rJPPRX5iBP-x=PRX5TsP59DHHP5rIHP-w64ZP=>>yntext.com
echo 40-2APQX-MiP-trP5_WP-pBP51w,pPTYPZPZP__m4GMH3QLKEetAbp>>yntext.com
echo .14Jp42ta:>>yntext.com
: then use yntext.com
echo Do you want to clear the screen? (Y/N)
yntext
if ERRORLEVEL 1 goto fin
: clear the screen
cls
:fin
: and delete tntext.com
del yntext.com

  Note that no spaces follow the arguments of ECHO commands; otherwise
the ECHO commands output the trailing spaces as well (unlike `echo'
command of UNIX), which makes the resulting com file works incorrectly.
You should also aware that the first ECHO goes with `>' but the rest go
with `>>'.
  If you execute this batch file, first it makes yntext.com and execute
it, which waits for Y/N key input. If the input is Y, this batch clears
the screen, otherwise if doesn't. Here you got a DOS generic batch file
which requires key input of user!
  Of course this is an extremely simplyfied example; there are various
possibilities of improvement, but they are omitted here.
